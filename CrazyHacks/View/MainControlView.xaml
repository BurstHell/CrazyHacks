<UserControl x:Class="CrazyHacks.View.MainControlView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:CrazyHacks.View"
             xmlns:viewModel="clr-namespace:CrazyHacks.ViewModel"
             xmlns:controls="clr-namespace:CrazyHacks.Util"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:converters="clr-namespace:CrazyHacks.Converter"
             mc:Ignorable="d" 
             DataContext="{Binding Path=MainControl, Source={StaticResource Locator}}"
             d:DesignHeight="600" d:DesignWidth="800">
    
    <UserControl.Resources>
        <ResourceDictionary>
            <!-- MainControlView 에서 사용할 Converter를 선언 하고 Key 이름을 부여 -->
            <converters:ButtonToBooleanConverter x:Key="ButtonToBooleanConverter"/>
            <converters:ActualWidthConverter x:Key="ActualWidthConverter"/>
            <converters:CheckToBooleanConverter x:Key="CheckToBooleanConverter" />
            <Style TargetType="{x:Type Button}">
                <!-- http://stackoverflow.com/questions/17630968/wpf-c-sharp-button-style 
                     Button Styling 의 대가를 만나자
                -->
                <Setter Property="Background" Value="#373737" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="FontSize" Value="15" />
                <Setter Property="FontFamily" Value="./#Segoe UI" />
                <Setter Property="SnapsToDevicePixels" Value="True" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border CornerRadius="4" Background="{TemplateBinding Background}">
                                <Grid>
                                    <!-- <Path x:Name="PathIcon" Width="15" Height="25" Stretch="Fill" Fill="#4C87B3" HorizontalAlignment="Left" Margin="17,0,0,0" Data="F1 M 30.0833,22.1667L 50.6665,37.6043L 50.6665,38.7918L 30.0833,53.8333L 30.0833,22.1667 Z "/>
                                    -->
                                    <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                                </Grid>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#E59400" />
                                    <Setter Property="Foreground" Value="White" />
                                    <!-- <Setter TargetName="PathIcon" Property="Fill" Value="Black" /> -->
                                </Trigger>

                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="OrangeRed" />
                                    <Setter Property="Foreground" Value="White" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="5"/>
            <RowDefinition Height="2*"/>
        </Grid.RowDefinitions>
        <DockPanel Grid.Row="0" x:Name="DockingPanel">
            <StackPanel DockPanel.Dock="Top"  Orientation="Horizontal" HorizontalAlignment="Right">
                <ToggleButton x:Name="SearchBox" Background="Transparent" IsChecked="True" Margin="0 4 0 4"  Width="{Binding Path=ActualWidth, ElementName=DockingPanel}" HorizontalAlignment="Left">
                    <Grid>
                        <Rectangle Width="{Binding Path=ActualWidth, ElementName=DockingPanel}" Fill="White">
                        </Rectangle>
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"> Search Box </TextBlock>
                    </Grid>
                </ToggleButton>
                <!-- PopUp 은 아래의 내용을 살핌으로써 가능하다 -->
                <!-- http://www.c-sharpcorner.com/UploadFile/mahesh/using-xaml-popup-in-wpf/ -->
                <Popup IsOpen="{Binding IsChecked, ElementName=SearchBox, Converter={StaticResource ButtonToBooleanConverter}}"  
                       PlacementTarget="{Binding ElementName=SearchBox}"
                       AllowsTransparency="True"  
                       PopupAnimation="Slide"
                       Margin="0 5 0 5">
                    <!-- <StackPanel Background="White" Width="{Binding Path=ActualWidth, ElementName=DockingPanel}"> -->
                    <StackPanel Background="White">
                        <Border CornerRadius="0" BorderBrush="Black" BorderThickness="1">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <GroupBox Margin="2 2 2 2" DataContext="{Binding FilterSetting}" Header="Request Filter" Grid.Row="0" Grid.Column="0">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="3*"/>
                                            <ColumnDefinition Width="5*"/>
                                        </Grid.ColumnDefinitions>
                                        <CheckBox Grid.Column="0" Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Center"
                                                  IsChecked="{Binding FilterHasParameter,Mode=TwoWay,Converter={StaticResource CheckToBooleanConverter}}">
                                            <Label>Show only records which has parameters</Label>
                                        </CheckBox>
                                        
                                        <CheckBox Grid.Column="0" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Center"
                                                  IsChecked="{Binding FilterDomain,Mode=TwoWay,Converter={StaticResource CheckToBooleanConverter}}">
                                            <Label>Show only records which has below hostname</Label>
                                        </CheckBox>
                                        <Label Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="2" HorizontalAlignment="Left">HostName : </Label>
                                        <TextBox Grid.Column="0" Grid.ColumnSpan="2" Background="LightGoldenrodYellow" Grid.Row="3"
                                                 Text="{Binding DomainFocus,Mode=TwoWay}"></TextBox>
                                    </Grid>
                                </GroupBox>
                                <GroupBox Margin="2 2 2 2" Header="Response Filter" Grid.Row="0" Grid.Column="1">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <UserControl Grid.Column="0" DataContext="{Binding FilterSetting}">
                                            <GroupBox Header="MIME">
                                                <Grid VerticalAlignment="Center">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition/>
                                                        <RowDefinition/>
                                                        <RowDefinition/>
                                                        <RowDefinition/>
                                                    </Grid.RowDefinitions>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition/>
                                                        <ColumnDefinition/>
                                                    </Grid.ColumnDefinitions>
                                                    <CheckBox Grid.Row="0" Grid.Column="0" IsChecked="{Binding FilterMimeHTML,Mode=TwoWay,Converter={StaticResource CheckToBooleanConverter}}">
                                                        <Label>HTML</Label>
                                                    </CheckBox>
                                                    <CheckBox Grid.Row="1" Grid.Column="0" IsChecked="{Binding FilterMimeScipts,Mode=TwoWay,Converter={StaticResource CheckToBooleanConverter}}">
                                                        <Label>Script</Label>
                                                    </CheckBox>
                                                    <CheckBox Grid.Row="2" Grid.Column="0" IsChecked="{Binding FilterMimeXML,Mode=TwoWay,Converter={StaticResource CheckToBooleanConverter}}">
                                                        <Label>XML</Label>
                                                    </CheckBox>
                                                    <CheckBox Grid.Row="3" Grid.Column="0" IsChecked="{Binding FilterMimeCSS,Mode=TwoWay,Converter={StaticResource CheckToBooleanConverter}}">
                                                        <Label>CSS</Label>
                                                    </CheckBox>
                                                    <CheckBox Grid.Row="0" Grid.Column="1" IsChecked="{Binding FilterMimeBinary,Mode=TwoWay,Converter={StaticResource CheckToBooleanConverter}}">
                                                        <Label>Binary</Label>
                                                    </CheckBox>
                                                    <CheckBox Grid.Row="1" Grid.Column="1" IsChecked="{Binding FilterMimeImages,Mode=TwoWay,Converter={StaticResource CheckToBooleanConverter}}">
                                                        <Label>Image</Label>
                                                    </CheckBox>
                                                    <CheckBox Grid.Row="2" Grid.Column="1" IsChecked="{Binding FilterMimeFlash,Mode=TwoWay,Converter={StaticResource CheckToBooleanConverter}}">
                                                        <Label>Flash</Label>
                                                    </CheckBox>
                                                    <CheckBox Grid.Row="3" Grid.Column="1" IsChecked="{Binding FilterMimeText,Mode=TwoWay,Converter={StaticResource CheckToBooleanConverter}}">
                                                        <Label>Text</Label>
                                                    </CheckBox>
                                                </Grid>
                                            </GroupBox>
                                        </UserControl>
                                        <UserControl Grid.Column="1" DataContext="{Binding FilterSetting}">
                                            <GroupBox Header="Status">
                                                <Grid VerticalAlignment="Center">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition></RowDefinition>
                                                        <RowDefinition></RowDefinition>
                                                        <RowDefinition></RowDefinition>
                                                        <RowDefinition></RowDefinition>
                                                    </Grid.RowDefinitions>
                                                    <CheckBox Grid.Row="0" IsChecked="{Binding FilterStatus200,Mode=TwoWay,Converter={StaticResource CheckToBooleanConverter}}">
                                                        <Label>200 / 2XX STATUS CODE</Label>
                                                    </CheckBox>
                                                    <CheckBox Grid.Row="1" IsChecked="{Binding FilterStatus300,Mode=TwoWay,Converter={StaticResource CheckToBooleanConverter}}">
                                                        <Label>300 / 3XX STATUS CODE</Label>
                                                    </CheckBox>
                                                    <CheckBox Grid.Row="2" IsChecked="{Binding FilterStatus400,Mode=TwoWay,Converter={StaticResource CheckToBooleanConverter}}">
                                                        <Label>400 / 4XX STATUS CODE</Label>
                                                    </CheckBox>
                                                    <CheckBox Grid.Row="3" IsChecked="{Binding FilterStatus500,Mode=TwoWay,Converter={StaticResource CheckToBooleanConverter}}">
                                                        <Label>500 / 5XX STATUS CODE</Label>
                                                    </CheckBox>
                                                </Grid>
                                            </GroupBox>
                                        </UserControl>
                                    </Grid>
                                </GroupBox>
                                <StackPanel Margin="2 2 2 2" FlowDirection="LeftToRight" Orientation="Horizontal" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="2">
                                    <Button Margin="0 0 5 0" Width="100" Command="{Binding FilterRecordCollectionView}">
                                        <StackPanel Orientation="Horizontal">
                                            <Image Width="15" Margin="0 0 10 0" Source="/Resource/Icon/Apply.png"/>
                                            <TextBlock Text="Apply"/>
                                        </StackPanel>
                                    </Button>
                                    <Button Margin="0 0 5 0" Width="100" Command="{Binding ClearFilterCollectionView}">
                                        <StackPanel Orientation="Horizontal">
                                            <Image Width="15" Margin="0 0 10 0" Source="/Resource/Icon/Cancel.png"/>
                                            <TextBlock Text="Clear"/>
                                        </StackPanel>
                                    </Button>
                                </StackPanel>
                            </Grid>
                        </Border>
                    </StackPanel>
                </Popup>
            </StackPanel>
            <DataGrid x:Name="HttpRecordDataGrid"  ItemsSource="{Binding RecordCollectionView}" SelectedItem="{Binding SelectedItem}" AutoGenerateColumns="False">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding IsSelected}" 
                            CommandParameter="{Binding Path=SelectedItems, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <DataGrid.ContextMenu>
                    <ContextMenu x:Name="Menu">
                        <MenuItem Header="Delete"></MenuItem>
                        <MenuItem Header="Copy"></MenuItem>
                        <!-- http://stackoverflow.com/questions/41432002/bind-commandparameter-from-menuitem-to-parent-datagrid 참조 -->
                        <MenuItem x:Name="Sender"  Header="XSS" 
                                  Command="{Binding Send2XssViewModel}"></MenuItem>
                    </ContextMenu>
                </DataGrid.ContextMenu>
                <!-- DataGrid Column Template 지정 -->
                <DataGrid.Columns>
                    <DataGridTextColumn Header="No" Binding="{Binding No, Mode=OneWay}"/>
                    <DataGridTextColumn Header="Host" MaxWidth="200" Binding="{Binding Host, Mode=OneWay}"/>
                    <DataGridTextColumn Header="Method" Binding="{Binding Method, Mode=OneWay}"/>
                    <DataGridTextColumn Header="URL" MaxWidth="500" Binding="{Binding URL, Mode=OneWay}"/>
                    <DataGridCheckBoxColumn Header="Params" Binding="{Binding Params, Mode=OneWay}"/>
                    <DataGridCheckBoxColumn Header="SSL" Binding="{Binding SSL, Mode=OneWay}"/>
                    <DataGridTextColumn Header="Status" Binding="{Binding Status, Mode=OneWay}"/>
                    <DataGridTextColumn Header="Length" Binding="{Binding Length, Mode=OneWay}"/>
                    <DataGridTextColumn Header="Extension" Binding="{Binding Extension, Mode=OneWay}"/>
                    <DataGridTextColumn Header="MIME" Binding="{Binding MIME, Mode=OneWay}"/>
                    <DataGridTextColumn Header="IP" Binding="{Binding IP, Mode=OneWay}"/>
                    <DataGridTextColumn Header="Time" Binding="{Binding Time, Mode=OneWay}"/>
                </DataGrid.Columns>
            </DataGrid>
        </DockPanel>
        <GridSplitter Grid.Row="1" Height="5" HorizontalAlignment="Stretch"></GridSplitter>
        <TabControl Grid.Row="2">
            <TabItem Header="Request">
                <TextBox x:Name="RequestText" IsEnabled="True" TextWrapping="Wrap" VerticalScrollBarVisibility="Visible" Text="{Binding RequestTextContent, Mode=OneWay}"/> 
            </TabItem>
            <TabItem Header="Response">
                <TextBox x:Name="ResponseText" IsEnabled="True" TextWrapping="Wrap" VerticalScrollBarVisibility="Visible" Text="{Binding ResponseTextContent, Mode=OneWay}"></TextBox>
            </TabItem>
        </TabControl>
    </Grid>
</UserControl>
